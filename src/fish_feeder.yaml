esphome:
  name: fishfeeder

esp8266:
  board: d1_mini
  restore_from_flash: true

# Enable logging
logger:

# Enable Home Assistant API
#api:

ota:
  password: SomethingFishy # Add pass

wifi:
  ap:
    ssid: "Fish Feeder Hotspot"
    password: SomethingFishy
captive_portal:

web_server:
  port: 80

globals:
  - id: last_timestamp # to keep track of days interval
    type: long long
    restore_value: true
    initial_value: "0"

select:
  - platform: template
    name: "First feeding of day"
    restore_value: true
    optimistic: true
    options:
      - "06:00"
      - "06:15"
      - "06:30"
      - "06:45"
      - "07:00"
      - "07:15"
      - "07:30"
      - "07:45"
      - "08:00"
      - "08:15"
      - "08:30"
      - "08:45"
      - "09:00"
      - "10:00"
      - "11:00"
      - "12:00"
      - "13:00"
      - "14:00"
      - "15:00"
      - "16:00"
      - "17:00"
      - "18:00"
      - "19:00"
      - "20:00"
      - "20:30"
      - "21:00"
      - "21:30"
      - "22:00"
      # - "22:30"
    initial_option: "20:00"
    id: feed_first_time
    icon: mdi:icon7-time
  - platform: template
    name: "Last feeding of day"
    restore_value: true
    optimistic: true
    options:
      # - "06:00"
      - "06:15"
      - "06:30"
      - "06:45"
      - "07:00"
      - "07:15"
      - "07:30"
      - "07:45"
      - "08:00"
      - "08:15"
      - "08:30"
      - "08:45"
      - "09:00"
      - "10:00"
      - "11:00"
      - "12:00"
      - "13:00"
      - "14:00"
      - "15:00"
      - "16:00"
      - "17:00"
      - "18:00"
      - "19:00"
      - "20:00"
      - "20:30"
      - "21:00"
      - "21:30"
      - "22:00"
      - "22:30"
    initial_option: "21:00"
    id: feed_last_time
    icon: mdi:icon7-time
number:
  - platform: template
    name: Number times per day
    min_value: 1
    max_value: 420
    step: 1
    initial_value: 1
    restore_value: true
    id: feed_num_per_day
    optimistic: true
    icon: mdi:icon7-th-list
  - platform: template
    name: Once every ...  days
    min_value: 1
    max_value: 14
    step: 1
    initial_value: 1
    restore_value: true
    id: feed_day_interval
    optimistic: true
    icon: mdi:icon7-table
    set_action:
      then: # not nessasary, but otherwise function might be weird fo rthe user, since living things likely will not benefit from such a schedule
        - lambda: |-
            if(x>1) {id(feed_num_per_day).publish_state(1);id(feed_num_per_day).update();}

  - platform: template
    name: Dosage
    min_value: 0.2
    max_value: 5
    step: 0.2
    initial_value: 1
    restore_value: true
    id: feed_dosage
    optimistic: true

button:
  - platform: template
    name: Manual feed
    icon: mdi:icon-stackexchange
    on_press:
      - cover.open: fishtank_lid
      - delay: 500ms
      - switch.turn_on: feed_motor
      - delay: !lambda |-
          return id(feed_dosage).state*1000;
      - switch.turn_off: feed_motor
      - switch.turn_on: vib_motor
      - delay: 500ms
      - cover.close: fishtank_lid
    id: feeder_trigger

switch:
  - platform: template
    id: feed_motor
    # inverted: true
    restore_mode: ALWAYS_OFF
    name: feeder motor
    internal: true # TODO REMOVE THIS
    # optimistic: true
    turn_on_action:
      then:
        - servo.write:
            id: screw_servo
            level: -10%
    turn_off_action:
      then:
        - servo.detach: screw_servo

  - platform: gpio
    pin: GPIO14
    name: vibration motor
    id: vib_motor
    on_turn_on:
      - delay: 100ms
      - switch.turn_off: vib_motor

output:
  - platform: esp8266_pwm
    pin: GPIO4
    frequency: 50 Hz
    id: screw_pwm
  - platform: esp8266_pwm
    pin: GPIO14
    frequency: 50 Hz
    id: lid_pwm
  - id: light_relay
    platform: gpio
    pin: GPIO13
light:
  - platform: binary
    name: Fish tank light
    output: light_relay

servo:
  - id: screw_servo
    output: screw_pwm
  - id: lid_servo
    output: lid_pwm

cover:
  - platform: template
    id: fishtank_lid
    open_action:
      - servo.write:
          id: lid_servo
          level: 100%
    close_action:
      - servo.write:
          id: lid_servo
          level: -100%
    stop_action:
      - servo.detach: lid_servo
    optimistic: true
    assumed_state: true

binary_sensor:
  - platform: gpio
    pin:
      number: GPIO5
      mode:
        input: true
        pullup: true
      inverted: true
    name: "Manual feed button"
    filters:
      - delayed_on_off: 10ms
    id: real_button
    on_press:
      then:
        - cover.open: fishtank_lid
        - delay: 500ms
        - switch.turn_on: feed_motor
    on_release:
      then:
        - delay: 500ms # otherwise motor may continue running, since the next command might get executed before teh turn_on command from the on_press
        - switch.turn_off: feed_motor
        - delay: 1ms
        - switch.turn_on: vib_motor
        - delay: 500ms
        - cover.close: fishtank_lid
    internal: true

time:
  - platform: sntp
    id: sntptime
    timezone: Europe/Amsterdam
    # note specifically set GMT as timezone as we will calculate local time using offset
    on_time:
      - seconds: 0
        minutes: /1
        # note minutes: /1, not minutes: 1, the latter only does the first minute of each hour rather than every minute
        then:
          - lambda: |-
              #include "../../../../timing.cpp"
