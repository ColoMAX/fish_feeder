{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"FishFeeder Documentation Welcome to the official documentation for the FishFeeder project! Whether you're a user looking to set up, maintain the device or a DIY enthusiast eager to build your own, you'll find the information you need here. Table of Contents Getting Started Initial Setup Configuration Maintenance Troubleshooting DIY Making your own Requirements Customization Build - Parts List - Assembly Getting Started If you are new to the FishFeeder project, start with the user documentation to learn how to set up and use the device. If you are interested in building your own FishFeeder, check out the DIY section for a guide. Contribution Contributions to the documentation are welcome! If you find any issues or have suggestions, feel free to open an issue or submit a pull request . License This documentation is licensed under MIT License - feel free to use, share, and modify. Happy fish feeding!","title":"FishFeeder Documentation"},{"location":"#fishfeeder-documentation","text":"Welcome to the official documentation for the FishFeeder project! Whether you're a user looking to set up, maintain the device or a DIY enthusiast eager to build your own, you'll find the information you need here.","title":"FishFeeder Documentation"},{"location":"#table-of-contents","text":"Getting Started Initial Setup Configuration Maintenance Troubleshooting DIY Making your own Requirements Customization Build - Parts List - Assembly","title":"Table of Contents"},{"location":"#getting-started","text":"If you are new to the FishFeeder project, start with the user documentation to learn how to set up and use the device. If you are interested in building your own FishFeeder, check out the DIY section for a guide.","title":"Getting Started"},{"location":"#contribution","text":"Contributions to the documentation are welcome! If you find any issues or have suggestions, feel free to open an issue or submit a pull request .","title":"Contribution"},{"location":"#license","text":"This documentation is licensed under MIT License - feel free to use, share, and modify. Happy fish feeding!","title":"License"},{"location":"diy/","text":"Making your own Customization One can customize this project with ease. A few examples are: Instead of ESP8266, use an ESP32 (or variants), by simply changing the configuration in fishfeeder.yaml . Add RGB lighting and heating control by adding a temperature sensor and Climate controller ESPHome software component . Add graphics to your box by modifying the laser cutter files. Add custom lighting effects to mimic a sunrise using RGB-leds and the ESPHome sun component . Etc. Software Requirements Install ESPHome (version 2023.11.6) After that you can start to work on the software. Add your modifications to the configuration in src/fishfeeder.yaml . e.g.: new name, enable home-assistant integration, add other controls, such as RGB lights. Flashing firmware connect via usb. run: cd src/; esphome run --device /dev/ttyUSB0 fishfeeder.yaml Then connect to wifi access point, or go to the webserver (by default http://fishfeeder.local:80 ) to configure it. Alternatively you can use the browser based uploading, with a generic firmware image on this page . And if you which, upload your modifications using OTA uploads after that. Mechanical Do so to your hearts content, all design files are available in the design/mechanical directory. Here you can modify the designs if required. The 3mf files contain the 3D printed parts, the and the rest should be self evident. There are some software which you might want to install before continuing: PrusaSlicer to create the gcode for your printer. qrencode by running apt install qrencode , for a qr code. Inkscape by running `apt install inkscape, to modify the laser cutter design. LaserWeb or LightBurn, to create the gcode for your cutter. To generate a QR to this page, which will be put on the box, run cd design/mechanical; bash qr_make.sh . Build . Parts list 1x esp8266 (Wemos D1 mini) 2x SG90 micro Servo's 3D printer and some (food-safe PLA) filament (approx 7m/21g of filament) laser/water cutter with 3mm flat material 1x vibration motor (Seeed Studio 316040001) 1x stsp momentary switch hot glue 2x paperclips or metal binding wire (for hinges and lid opening) 1x 8x1 pin-header or other connector 2x m2 bolts 1x acrylic/Plexiglass (approx 39x83mm) Assembly These instructions are not complete, but should give you the general idea, be creative! 3D print the screw( design/mechanical/screw.3mf ), bucket( design/mechanical/bucket.3mf ) and optionally the cap (via GNU make to generate the .3mf ). Laser-cut the casing design/mechanical/Laser_cut_box.svg . one the servo's needs to be modified for continues rotation. You can follow a few guides online but here is a summary: Remove rotation limit on one of the gears Remove the metal extremities on the base of the potentiometer shaft. De-solder internal potentiometer and add two equivalent resistors, to fool controller in always center position, but keep potentiometer in there, for structural support of gears. Solder as described in electrical/schematic.svg . Use wire and the small pieces from the cutter to create the hinges. Screw the continues servo to the bucket. Heat the end of the screw in order to press-fit it to the servo. Glue to other servo on a 90 degree angle to the previous one. Add the headers and hinge and wires between hinge, servo and your aquarium lid. Close it all up. Now continue with Getting started .","title":"Making your own"},{"location":"diy/#making-your-own","text":"","title":"Making your own"},{"location":"diy/#customization","text":"One can customize this project with ease. A few examples are: Instead of ESP8266, use an ESP32 (or variants), by simply changing the configuration in fishfeeder.yaml . Add RGB lighting and heating control by adding a temperature sensor and Climate controller ESPHome software component . Add graphics to your box by modifying the laser cutter files. Add custom lighting effects to mimic a sunrise using RGB-leds and the ESPHome sun component . Etc.","title":"Customization"},{"location":"diy/#software","text":"","title":"Software"},{"location":"diy/#requirements","text":"Install ESPHome (version 2023.11.6) After that you can start to work on the software. Add your modifications to the configuration in src/fishfeeder.yaml . e.g.: new name, enable home-assistant integration, add other controls, such as RGB lights.","title":"Requirements"},{"location":"diy/#flashing-firmware","text":"connect via usb. run: cd src/; esphome run --device /dev/ttyUSB0 fishfeeder.yaml Then connect to wifi access point, or go to the webserver (by default http://fishfeeder.local:80 ) to configure it. Alternatively you can use the browser based uploading, with a generic firmware image on this page . And if you which, upload your modifications using OTA uploads after that.","title":"Flashing firmware"},{"location":"diy/#mechanical","text":"Do so to your hearts content, all design files are available in the design/mechanical directory. Here you can modify the designs if required. The 3mf files contain the 3D printed parts, the and the rest should be self evident. There are some software which you might want to install before continuing: PrusaSlicer to create the gcode for your printer. qrencode by running apt install qrencode , for a qr code. Inkscape by running `apt install inkscape, to modify the laser cutter design. LaserWeb or LightBurn, to create the gcode for your cutter. To generate a QR to this page, which will be put on the box, run cd design/mechanical; bash qr_make.sh .","title":"Mechanical"},{"location":"diy/#build","text":".","title":"Build"},{"location":"diy/#parts-list","text":"1x esp8266 (Wemos D1 mini) 2x SG90 micro Servo's 3D printer and some (food-safe PLA) filament (approx 7m/21g of filament) laser/water cutter with 3mm flat material 1x vibration motor (Seeed Studio 316040001) 1x stsp momentary switch hot glue 2x paperclips or metal binding wire (for hinges and lid opening) 1x 8x1 pin-header or other connector 2x m2 bolts 1x acrylic/Plexiglass (approx 39x83mm)","title":"Parts list"},{"location":"diy/#assembly","text":"These instructions are not complete, but should give you the general idea, be creative! 3D print the screw( design/mechanical/screw.3mf ), bucket( design/mechanical/bucket.3mf ) and optionally the cap (via GNU make to generate the .3mf ). Laser-cut the casing design/mechanical/Laser_cut_box.svg . one the servo's needs to be modified for continues rotation. You can follow a few guides online but here is a summary: Remove rotation limit on one of the gears Remove the metal extremities on the base of the potentiometer shaft. De-solder internal potentiometer and add two equivalent resistors, to fool controller in always center position, but keep potentiometer in there, for structural support of gears. Solder as described in electrical/schematic.svg . Use wire and the small pieces from the cutter to create the hinges. Screw the continues servo to the bucket. Heat the end of the screw in order to press-fit it to the servo. Glue to other servo on a 90 degree angle to the previous one. Add the headers and hinge and wires between hinge, servo and your aquarium lid. Close it all up. Now continue with Getting started .","title":"Assembly"},{"location":"getting-started/","text":"Getting started If you do not already have the fishfeeder, than first go to Making your own before continuing this document. Initial Setup Power on the device by connecting the power port (likely a micro-usb or usb-C port on the device). The device should not pull more than 500mA at 5v, thus any usb power source should suffice, but do mind to use a short or high quality usb cable. Tip: you can test whether the device is properly working, by pressing the button on the top for around 1 second. The dispenser screw should start to turn and stop as you release it. If not, there is likely something wrong with your power connection. The first time your power on the device, it will create a WiFi access point, named \"FishFeeder Hotspot\". Connect to it using the password SomethingFishy . Now your device should ask you, or redirect you towards the configuration page of the device. If not, you can manually go to the website http://192.168.4.1 , making sure you are still connected to the access point of the fishfeeder. Alternatively you can try to connect the device via usb to your computer and visit Improv via Serial to set the initial WiFi credentials directly, without using the hotspot. NOTE not all browsers support this feature, the site will indicate if so. (optional) Here you can apply any updates ( *.bin e.g. firmware.bin file) if provided to you. Now you can configure you WiFI settings inside of the fishfeeder. After successfully submitting you WiFi credentials to the device, you should see the access point disappear. After which you should be able to connect to the general configuration panel of the device by navigating to http://fishfeeder.local . In this configuration panel you can modify the feeding schedule and amount. Tip: you can test the amount dispensed per feeding time, by doing a manual feed via this configuration panel. Do make sure you added enough fish food in the top compartment of the device. After your are done configuring, you can safely exit the configuration, but do not unplug the device right away. The settings will be store automatically after a few moments (within 1 minute). Configuration Open the configuration page when connected to the same WiFi network as your fishfeeder. Navigate to http://fishfeeder.local . Now you should be greeted with the configuration page. The feeder will dispense a configurable amount of food based on a schedule you can provide. This schedule can be configured to be active only on certain days ( Once every ... days ), such as; each day (1), every second day (2), one a week (7). Then on those days, you get set a starting and ending time, in which the feeder can dispense. Within this time frame, you can set the number of times it will need to feed. You can configure the amount dispensed per feeding, which is an arbitrary scale , so test it out. This can be done by modifying the scale, and than pressing the manual feed button on the webpage to dispense this amount. Maintenance From the configuration page you can also apply updates manually if you have access to an update file, by uploading the .bin file. You may also visit the release page to retrieve generic firmware updates. Troubleshooting Make sure yo have a proper power supply and a working power cable connected to the feeder. If you are unable to do a firmware update, you can try to restart in safe-mode, vai the configuration webpage, before uploading the file. If you have troubles with applying your new schedule, you may want to reset the scheduler, which you also can do via the webinterface. After which you should be able to see that the last feed time changed. If you are helpless you can also try to reset to factory defaults : If you can access the configuration webpage, you can reset back to factory defaults over there. If not, you can use the button on the device itself: You need to do three rapid salvos of one short press, then one longer (0.5 seconds), similar to a heartbeat. 10 seconds after the lasst lomg press, will it vibrate (assuming vibration motor is installed), and do the factory reset. Note that his will not revert any firmware updates. Lastly you can try to submit a new issue on github if you are not able to figure it out yourself. Known bugs After an update has been performed via ota (WiFi), the running feeding sum can be lost and will display the wrong value. A subsequent factory reset will also not reset the counter to 0.","title":"Getting started"},{"location":"getting-started/#getting-started","text":"If you do not already have the fishfeeder, than first go to Making your own before continuing this document.","title":"Getting started"},{"location":"getting-started/#initial-setup","text":"Power on the device by connecting the power port (likely a micro-usb or usb-C port on the device). The device should not pull more than 500mA at 5v, thus any usb power source should suffice, but do mind to use a short or high quality usb cable. Tip: you can test whether the device is properly working, by pressing the button on the top for around 1 second. The dispenser screw should start to turn and stop as you release it. If not, there is likely something wrong with your power connection. The first time your power on the device, it will create a WiFi access point, named \"FishFeeder Hotspot\". Connect to it using the password SomethingFishy . Now your device should ask you, or redirect you towards the configuration page of the device. If not, you can manually go to the website http://192.168.4.1 , making sure you are still connected to the access point of the fishfeeder. Alternatively you can try to connect the device via usb to your computer and visit Improv via Serial to set the initial WiFi credentials directly, without using the hotspot. NOTE not all browsers support this feature, the site will indicate if so. (optional) Here you can apply any updates ( *.bin e.g. firmware.bin file) if provided to you. Now you can configure you WiFI settings inside of the fishfeeder. After successfully submitting you WiFi credentials to the device, you should see the access point disappear. After which you should be able to connect to the general configuration panel of the device by navigating to http://fishfeeder.local . In this configuration panel you can modify the feeding schedule and amount. Tip: you can test the amount dispensed per feeding time, by doing a manual feed via this configuration panel. Do make sure you added enough fish food in the top compartment of the device. After your are done configuring, you can safely exit the configuration, but do not unplug the device right away. The settings will be store automatically after a few moments (within 1 minute).","title":"Initial Setup"},{"location":"getting-started/#configuration","text":"Open the configuration page when connected to the same WiFi network as your fishfeeder. Navigate to http://fishfeeder.local . Now you should be greeted with the configuration page. The feeder will dispense a configurable amount of food based on a schedule you can provide. This schedule can be configured to be active only on certain days ( Once every ... days ), such as; each day (1), every second day (2), one a week (7). Then on those days, you get set a starting and ending time, in which the feeder can dispense. Within this time frame, you can set the number of times it will need to feed. You can configure the amount dispensed per feeding, which is an arbitrary scale , so test it out. This can be done by modifying the scale, and than pressing the manual feed button on the webpage to dispense this amount.","title":"Configuration"},{"location":"getting-started/#maintenance","text":"From the configuration page you can also apply updates manually if you have access to an update file, by uploading the .bin file. You may also visit the release page to retrieve generic firmware updates.","title":"Maintenance"},{"location":"getting-started/#troubleshooting","text":"Make sure yo have a proper power supply and a working power cable connected to the feeder. If you are unable to do a firmware update, you can try to restart in safe-mode, vai the configuration webpage, before uploading the file. If you have troubles with applying your new schedule, you may want to reset the scheduler, which you also can do via the webinterface. After which you should be able to see that the last feed time changed. If you are helpless you can also try to reset to factory defaults : If you can access the configuration webpage, you can reset back to factory defaults over there. If not, you can use the button on the device itself: You need to do three rapid salvos of one short press, then one longer (0.5 seconds), similar to a heartbeat. 10 seconds after the lasst lomg press, will it vibrate (assuming vibration motor is installed), and do the factory reset. Note that his will not revert any firmware updates. Lastly you can try to submit a new issue on github if you are not able to figure it out yourself.","title":"Troubleshooting"},{"location":"getting-started/#known-bugs","text":"After an update has been performed via ota (WiFi), the running feeding sum can be lost and will display the wrong value. A subsequent factory reset will also not reset the counter to 0.","title":"Known bugs"}]}